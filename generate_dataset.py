import json
import random

# --- 数据模板定义 ---
# 我们在这里为不同学科和教学质量定义模板。
# 每个模板包含一个'transcript'（教学转录）和一个'evaluation'（评估报告）。
# 使用 {topic} 作为占位符，以便脚本可以动态插入具体主题。
TEMPLATES = {
    "数学": {
        "topics": ["勾股定理", "一元二次方程", "函数图像", "概率初步"],
        "优秀": {
            "transcript": "同学们，想象一下，一个梯子靠在墙上，它和墙、地面构成了什么图形？对，直角三角形。今天我们就来探究这个图形三边之间一个非常优美的关系——{topic}。让我们从一个简单的正方形地砖的对角线问题开始思考...",
            "evaluation": """**教学能力评估报告**

**1. 知识点**:
*   **优点**: 知识讲解由浅入深，通过实际情境引入，激发了学生的学习兴趣。不仅讲授了{topic}的定义，还探讨了其历史渊源和实际应用。

**2. 讲解逻辑性**:
*   **优点**: 逻辑链条完整清晰。从情境导入到概念形成，再到公式推导和应用，环环相扣，符合认知规律。

**3. 术语专业性**:
*   **优点**: 术语使用严谨，表达清晰，同时能用通俗的语言解释专业概念。

**4. 教学指令**:
*   **优点**: 采用了启发式提问，引导学生独立思考和探究，并通过小组讨论加深理解，而非简单灌输。

**综合建议**:
这是一堂高质量的数学课。建议可以最后留一个开放性问题，让学生探索{topic}在其他领域的应用。"""
        },
        "普通": {
            "transcript": "今天我们学习{topic}。它的定义是，在直角三角形中，两条直角边的平方和等于斜边的平方，也就是 a²+b²=c²。我们来看一个例题，如果直角边a=3，b=4，那么斜边c等于多少？根据公式计算就是5。",
            "evaluation": """**教学能力评估报告**

**1. 知识点**:
*   **优点**: 准确地讲述了{topic}的定义和公式。
*   **不足**: 知识点讲解较为孤立，缺少与其他知识的联系或实际背景。

**2. 讲解逻辑性**:
*   **不足**: 逻辑性一般。直接给出定义和公式，缺少必要的推导和探索过程，学生可能知其然不知其所以然。

**3. 术语专业性**:
*   **优点**: 术语使用基本正确。

**4. 教学指令**:
*   **不足**: 教学指令以例题讲解为主，缺少对学生思维的引导和检查环节。

**综合建议**:
建议在讲解定义前增加一个引入环节。在讲解例题后，可以设计一些变式练习，并让学生上台讲解，以检查其掌握情况。"""
        },
        "较差": {
            "transcript": "上课了啊。今天讲{topic}，公式是a方加b方等于c方。都记住了啊，考试要考的。下面打开练习册第25页，开始做题。第一题...",
            "evaluation": """**教学能力评估报告**

**1. 知识点**:
*   **不足**: 知识点讲解严重不完整，只有结论性公式，没有定义、没有前提条件（直角三角形），学生容易产生误解。

**2. 讲解逻辑性**:
*   **不足**: 几乎没有逻辑性，是典型的“填鸭式”教学，直接跳到做题环节。

**3. 术语专业性**:
*   **不足**: 术语使用不严谨，缺少对“a,b,c”分别代表什么的解释。

**4. 教学指令**:
*   **不足**: 教学指令单一且无效，只是让学生做题，没有教学互动。

**综合建议**:
教学设计需要完全重构。必须从{topic}的基本概念和适用条件讲起，并补充完整的推导或验证过程。应将教学重心从“解题”转向“概念理解”。"""
        }
    },
    "历史": {
        "topics": ["秦朝的统一", "文艺复兴", "工业革命", "新航路的开辟"],
        "优秀": {
            "transcript": "提到{topic}，大家可能会想到蒸汽机、工厂。但这仅仅是表象。今天，我们不仅要了解{topic}中的重大发明，更要深入探讨一个问题：为什么是英国，而不是其他国家，率先开启了这场变革？让我们从当时的政治制度、殖民贸易和圈地运动三个方面，一同来抽丝剥茧...",
            "evaluation": """**教学能力评估报告**

**1. 知识点**:
*   **优点**: 知识点讲解有深度和广度，不局限于事实陈述，而是引导学生探究历史事件背后的深层原因。

**2. 讲解逻辑性**:
*   **优点**: 逻辑严密，提出中心问题，并从多个维度（政治、经济、社会）进行分析，展现了优秀的史学思维。

**3. 术语专业性**:
*   **优点**: “圈地运动”、“殖民贸易”等专业术语运用自如，且解释清晰。

**4. 教学指令**:
*   **优点**: 指令富有探究性，通过核心问题引导整堂课的走向，能有效激发学生的高阶思维。

**综合建议**:
非常精彩的一堂历史探究课。可以在课程结尾，引导学生讨论{topic}对现代社会产生的持续影响，以建立古今联系。"""
        },
        "普通": {
            "transcript": "大家好，今天我们讲{topic}。{topic}发生于18世纪的英国，重要的发明有瓦特改良的蒸汽机，还有珍妮纺纱机。它极大地提高了生产力，使英国成为了‘世界工厂’。",
            "evaluation": """**教学能力评估报告**

**1. 知识点**:
*   **优点**: 涵盖了{topic}的基本要素：时间、地点、代表性成就和影响。
*   **不足**: 知识点呈碎片化，缺少对各要素之间关联的分析。

**2. 讲解逻辑性**:
*   **不足**: 逻辑性较弱，以知识点的罗列为主，缺少一条清晰的主线。

**3. 术语专业性**:
*   **优点**: 术语使用无误。

**4. 教学指令**:
*   **不足**: 基本上是单向的知识陈述，缺少师生互动和教学指令。

**综合建议**:
建议围绕一个核心问题来组织教学内容，例如“{topic}如何改变了世界？”。在介绍发明时，可以多一些图片或视频资料辅助。"""
        },
        "较差": {
            "transcript": "今天讲{topic}，就是机器代替了手工。瓦特发明了蒸汽机。下一个知识点。",
            "evaluation": """**教学能力评估报告**

**1. 知识点**:
*   **不足**: 知识点讲解过于简化，信息量严重不足。

**2. 讲解逻辑性**:
*   **不足**: 毫无逻辑可言，只是简单地抛出结论。

**3. 术语专业性**:
*   **不足**: 语言过于随意，不够专业。

**4. 教学指令**:
*   **不足**: 没有有效的教学指令。

**综合建议**:
教学内容需要极大地丰富。应详细介绍{topic}的背景、过程、代表性成就及其深远影响。建议从备课环节开始进行全面改进。"""
        }
    }
}

def generate_dataset_entry(subject, topic, quality):
    """根据给定的学科、主题和质量，生成一条数据。"""
    template = TEMPLATES[subject][quality]
    transcript = template["transcript"].format(topic=topic)
    evaluation = template["evaluation"].format(topic=topic)

    # 构建符合Gemma指令微调格式的文本
    formatted_text = (
        f"<s>[INST] 指令：请根据以下师范生的课堂教学转录文本，从知识点、讲解逻辑性、"
        f"术语专业性、教学指令四个方面进行详细评估，并给出改进建议。\n\n"
        f"转录文本：\n“{transcript}” [/INST] \n\n{evaluation}</s>"
    )

    return {"text": formatted_text}

def main(num_entries=200, output_file="teaching_eval_dataset.jsonl"):
    """主函数，生成指定数量的数据并写入文件。"""
    dataset = []
    subjects = list(TEMPLATES.keys())

    print(f"开始生成 {num_entries} 条数据...")

    for i in range(num_entries):
        # 随机选择学科
        subject = random.choice(subjects)
        # 随机选择该学科下的一个主题
        topic = random.choice(TEMPLATES[subject]["topics"])
        # 随机选择一个质量等级
        quality = random.choice(["优秀", "普通", "较差"])

        # 生成数据条目
        entry = generate_dataset_entry(subject, topic, quality)
        dataset.append(entry)

    # 将数据写入JSONL文件
    with open(output_file, 'w', encoding='utf-8') as f:
        for entry in dataset:
            f.write(json.dumps(entry, ensure_ascii=False) + '\n')

    print(f"成功生成 {len(dataset)} 条数据，并保存到文件 {output_file}")

if __name__ == "__main__":
    main(num_entries=205) # 生成205条，确保不少于200
